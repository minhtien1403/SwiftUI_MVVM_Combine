# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  macos: circleci/macos@1.0
commands:
  restore_gem:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
  restore_package:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
  save_gem:
    steps:
      - save_cache:
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  save_package:
    steps:
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  install_tools:
    steps:
      - run:
          name: install tools
          command: |
            bundle install --path vendor/bundle
            bundle update fastlane
            npm install firebase-tools

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    macos:
      xcode: 15.0.1
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Test"
          command: |
            cd SwiftUI_MVVM_Combine;
            bundle update;
            bundle install;
            bundle exec fastlane test_lane
          no_output_timeout: 15m
      - store_artifacts:
          path: /Users/distiller/project/SwiftUI_MVVM_Combine/SwiftUI_MVVM_Combine.ipa
  
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
